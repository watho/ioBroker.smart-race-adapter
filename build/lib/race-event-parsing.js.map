{
  "version": 3,
  "sources": ["../../src/lib/race-event-parsing.ts"],
  "sourcesContent": ["import jointz, { Infer } from \"jointz\";\r\n\r\nexport const RaceEventValidator = jointz\r\n    .object({\r\n        time: jointz.number(),\r\n        event_type: jointz.string(),\r\n        event_data: jointz.or(\r\n            // event.change_status\r\n            jointz\r\n                .object({\r\n                    old: jointz.string(),\r\n                    new: jointz.string(),\r\n                })\r\n                .requiredKeys([\"old\", \"new\"]),\r\n            // event.start\r\n            jointz\r\n                .object({\r\n                    type: jointz.string(),\r\n                    duration: jointz.string(),\r\n                    laps: jointz.string(),\r\n                })\r\n                .requiredKeys([\"type\"]),\r\n            // event.end\r\n            jointz.object({}),\r\n        ),\r\n    })\r\n    .requiredKeys([\"time\", \"event_type\", \"event_data\"]);\r\n\r\nexport type RaceEvent = Infer<typeof RaceEventValidator>;\r\n\r\nexport interface IRaceEvent {\r\n    time: number;\r\n    event_type: string;\r\n    event_data: IEventChangeStatus;\r\n}\r\n\r\n/**\r\n * @serializable\r\n */\r\nexport interface IEventChangeStatus {\r\n    old: string;\r\n    new: string;\r\n}\r\n\r\n/**\r\n * @serializable\r\n */\r\nexport interface EventEnd {\r\n    type: string;\r\n    result: { [key: string]: RaceResult };\r\n}\r\n\r\n/**\r\n * @serializable\r\n */\r\nexport interface RaceResult {\r\n    driver_id: number;\r\n    car_id: number;\r\n    controller_id: number;\r\n    laps: number;\r\n    best_laptime: number;\r\n    pitstops: number;\r\n    gap: string;\r\n    disqualified: boolean;\r\n    retired: boolean;\r\n}\r\n\r\nexport interface EventStart1 {\r\n    time: number;\r\n    event_type: string;\r\n    event_data: EventStart1EventData;\r\n}\r\n\r\nexport interface EventStart1EventData {\r\n    type: string;\r\n    duration: string;\r\n}\r\n\r\nexport interface EventStart2 {\r\n    time: number;\r\n    event_type: string;\r\n    event_data: EventStart2EventData;\r\n}\r\n\r\nexport interface EventStart2EventData {\r\n    type: string;\r\n    laps: string;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAEvB,MAAM,qBAAqB,cAAAA,QAC7B,OAAO;AAAA,EACJ,MAAM,cAAAA,QAAO,OAAO;AAAA,EACpB,YAAY,cAAAA,QAAO,OAAO;AAAA,EAC1B,YAAY,cAAAA,QAAO;AAAA,IAEf,cAAAA,QACK,OAAO;AAAA,MACJ,KAAK,cAAAA,QAAO,OAAO;AAAA,MACnB,KAAK,cAAAA,QAAO,OAAO;AAAA,IACvB,CAAC,EACA,aAAa,CAAC,OAAO,KAAK,CAAC;AAAA,IAEhC,cAAAA,QACK,OAAO;AAAA,MACJ,MAAM,cAAAA,QAAO,OAAO;AAAA,MACpB,UAAU,cAAAA,QAAO,OAAO;AAAA,MACxB,MAAM,cAAAA,QAAO,OAAO;AAAA,IACxB,CAAC,EACA,aAAa,CAAC,MAAM,CAAC;AAAA,IAE1B,cAAAA,QAAO,OAAO,CAAC,CAAC;AAAA,EACpB;AACJ,CAAC,EACA,aAAa,CAAC,QAAQ,cAAc,YAAY,CAAC;",
  "names": ["jointz"]
}
