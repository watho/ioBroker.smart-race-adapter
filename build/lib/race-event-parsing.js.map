{
  "version": 3,
  "sources": ["../../src/lib/race-event-parsing.ts"],
  "sourcesContent": ["import jointz, { Infer } from \"jointz\";\n\nexport const RaceEventValidator = jointz\n    .object({\n        time: jointz.number(),\n        event_type: jointz.string(),\n        event_data: jointz.or(\n            // event.change_status\n            jointz\n                .object({\n                    old: jointz.string(),\n                    new: jointz.string(),\n                })\n                .requiredKeys([\"old\", \"new\"]),\n            // event.start\n            jointz\n                .object({\n                    type: jointz.string(),\n                    duration: jointz.string(),\n                    laps: jointz.string(),\n                })\n                .requiredKeys([\"type\"]),\n            // event.end\n            jointz.object({}),\n        ),\n    })\n    .requiredKeys([\"time\", \"event_type\", \"event_data\"]);\n\nexport type RaceEvent = Infer<typeof RaceEventValidator>;\n\nexport interface IRaceEvent {\n    time: number;\n    event_type: string;\n    event_data: IEventChangeStatus;\n}\n\n/**\n * @serializable\n */\nexport interface IEventChangeStatus {\n    old: string;\n    new: string;\n}\n\n/**\n * @serializable\n */\nexport interface EventEnd {\n    type: string;\n    result: { [key: string]: RaceResult };\n}\n\n/**\n * @serializable\n */\nexport interface RaceResult {\n    driver_id: number;\n    car_id: number;\n    controller_id: number;\n    laps: number;\n    best_laptime: number;\n    pitstops: number;\n    gap: string;\n    disqualified: boolean;\n    retired: boolean;\n}\n\nexport interface EventStart1 {\n    time: number;\n    event_type: string;\n    event_data: EventStart1EventData;\n}\n\nexport interface EventStart1EventData {\n    type: string;\n    duration: string;\n}\n\nexport interface EventStart2 {\n    time: number;\n    event_type: string;\n    event_data: EventStart2EventData;\n}\n\nexport interface EventStart2EventData {\n    type: string;\n    laps: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAEvB,MAAM,qBAAqB,cAAAA,QAC7B,OAAO;AAAA,EACJ,MAAM,cAAAA,QAAO,OAAO;AAAA,EACpB,YAAY,cAAAA,QAAO,OAAO;AAAA,EAC1B,YAAY,cAAAA,QAAO;AAAA,IAEf,cAAAA,QACK,OAAO;AAAA,MACJ,KAAK,cAAAA,QAAO,OAAO;AAAA,MACnB,KAAK,cAAAA,QAAO,OAAO;AAAA,IACvB,CAAC,EACA,aAAa,CAAC,OAAO,KAAK,CAAC;AAAA,IAEhC,cAAAA,QACK,OAAO;AAAA,MACJ,MAAM,cAAAA,QAAO,OAAO;AAAA,MACpB,UAAU,cAAAA,QAAO,OAAO;AAAA,MACxB,MAAM,cAAAA,QAAO,OAAO;AAAA,IACxB,CAAC,EACA,aAAa,CAAC,MAAM,CAAC;AAAA,IAE1B,cAAAA,QAAO,OAAO,CAAC,CAAC;AAAA,EACpB;AACJ,CAAC,EACA,aAAa,CAAC,QAAQ,cAAc,YAAY,CAAC;",
  "names": ["jointz"]
}
